name: Deploy preview

on:
  push:
    branches-ignore:
      - 'master'
  pull_request:
    branches: [ "master" ]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  CARGO_TERM_COLOR: always

jobs:

  fake-build-wasm:

    if: false

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Generate fake ./www/public/out content
      run: sh ./fake-build-wasm.sh
    - name: Cache wasm-bindgen output
      uses: actions/cache@v3
      with:
        path: www/public/out
        key: wasm-${{ github.run_id }}
        restore-keys: wasm-

  build-wasm:

    if: true

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: wasm32-unknown-unknown
        override: true
    - name: install wasm-bindgen-cli
      run: |
        cargo install wasm-bindgen-cli@0.2.84
    - name: install wasm-opt
      run: |
        cargo install wasm-opt
    - name: Build
      run: make wasm-build-opt

  build-www:

    needs: build-wasm

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Restore cache wasm-bindgen output
      uses: actions/cache@v3
      with:
        path: www/public/out
        key: wasm-${{ github.run_id }}
    - name: Setup Node ðŸ¥£
      uses: actions/setup-node@v3
      with:
        node-version: 18
    - run: node -v
    - run: npm -v
    - name: Install www dependencies
      run: npm install
      working-directory: ./www
    - name: Install Vercel CLI
      run: npm install --global vercel@latest
      working-directory: ./www
    - name: Pull Vercel Environment Information
      run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      working-directory: ./www
    - name: Build Project Artifacts
      run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      working-directory: ./www
    - name: Deploy Project Artifacts to Vercel
      run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
      working-directory: ./www
